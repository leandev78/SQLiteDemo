############################################
# Aplicación Spring Boot: Tienda Online
############################################

# Nombre de la aplicación
spring.application.name=tiendaonline

# Puerto donde se ejecuta la app (http://localhost:8085)
server.port=8085


############################################
# Configuración de conexión a base de datos
############################################

# --- Opción A: Conexión remota (Hosting) ---
#spring.datasource.url=jdbc:mariadb://desarrollo.mysite.com.ar:3306/compras_online?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=true&nullNamePatternMatchesAll=true

# --- Opción B: Conexión local (XAMPP, MySQL instalado localmente) ---
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/compras_online?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=true&nullNamePatternMatchesAll=true

# Credenciales de acceso a la base de datos
spring.datasource.username=alumnosunpaz2
spring.datasource.password=alumnosunpaz2

# Driver JDBC para MariaDB (compatible con Spring Boot 3 y Hibernate 6)
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# Dialecto específico para MariaDB 10.x (mejora compatibilidad con Hibernate)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB106Dialect


############################################
# Configuración de Hibernate (JPA)
############################################

# Mostrar en consola las consultas SQL que ejecuta Hibernate
spring.jpa.show-sql=true

# Estrategia de actualización del esquema de base de datos:
#
# ddl-auto=none        → No modifica la base de datos. Ideal cuando ya está creada.
# ddl-auto=create      → Crea todas las tablas desde cero (¡borra lo anterior!).
# ddl-auto=create-drop → Crea y luego elimina todas las tablas al apagar la app.
# ddl-auto=update      → Actualiza la estructura según las entidades sin perder datos.

spring.jpa.hibernate.ddl-auto=none
